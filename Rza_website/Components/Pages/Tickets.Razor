@page "/Tickets"
@using Rza_website.Services
@using Rza_website.Utilties
@using Rza_website.Models
@inject AttractionService AttractionService
@inject UserSession UserSession
@inject NavigationManager NavigationManager
@inject TicketBookingService TicketBookingService
@inject TicketService TicketService

@rendermode InteractiveServer

<link rel="stylesheet" href="~/css/Style.css" />

<div class="booking-container">
    <h2>Book Your Tickets</h2>

    @if (attractions != null && attractions.Count > 0)
    {
        <div class="ticket-options">
            <div class="ticket-option">
                <span class="ticket-name">Adult</span>
                <span class="ticket-price">£14.99</span>
                <button class="btn-add-to-basket" @onclick="@(e => AddTicket(1))">Add to Basket</button>
            </div>
            <div class="ticket-option">
                <span class="ticket-name">Children</span>
                <span class="ticket-price">£9.99</span>
                <button class="btn-add-to-basket" @onclick="@(e => AddTicket(2))">Add to Basket</button>
            </div>
        </div>

        <div class="basket-actions">
            <label for="ticketDate">Select Visit Date</label>
            <input type="date" id="ticketDate" class="basket-date-picker" min="@DateTime.Now.ToString("yyyy-MM-dd")" @bind="@ticketDate" />

            <button class="btn-book" @onclick="BookTickets">
                Book Tickets
            </button>
        </div>
    }
    else
    {
        <div class="no-attractions">No attractions available</div>
    }

    <div class="tickets-section">
        <h3>Your Tickets</h3>
        @if (tickets != null && tickets.Count > 0)
        {
            <ul class="ticket-list">
                @foreach (Ticket ticket in tickets)
                {
                    <li class="ticket-item">
                        Ticket ID: @ticket.TicketId, Attraction ID: @ticket.AttractionId
                    </li>
                }
            </ul>
        }
        else
        {
            <div class="no-tickets">Your tickets will show here...</div>
        }
    </div>
</div>

@code {
    List<Attraction> attractions;
    List<Ticket> tickets = new List<Ticket>();
    DateOnly ticketDate;

    protected override async Task OnInitializedAsync()
    {
        if (UserSession.UserID == null || UserSession.UserID == 0)
        {
            NavigationManager.NavigateTo("/");
        }
        else
        {
            attractions = await AttractionService.GetAttractionsAsync();
        }
    }

    private void AddTicket(int ticketType)
    {
        Ticket newTicket = new Ticket
            {
                ticketType = ticketType
            };
        tickets.Add(newTicket);
    }

    private async Task BookTickets()
    {
        Ticketbooking newTicketbooking = new Ticketbooking
            {
                CustomerId = UserSession.UserID,
                Date = ticketDate
            };
        await TicketBookingService.AddTicketBookingAsync(newTicketbooking);

        foreach (Ticket ticket in tickets)
        {
            ticket.Ticketbooking = newTicketbooking;
            await TicketService.AddTicketAsync(ticket);
        }

        // Optionally, clear the basket after booking
        tickets.Clear();
    }
}
